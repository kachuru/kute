#!/usr/bin/env php
<?php
function password($len, $ext = false)
{
    $segs = array(
	    'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
	    'abcdefghijklmnopqrstuvwxyz',
	    '0123456789'
    );
    $probs = array(0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2);

	if ($ext === true) {
		$segs[] = '!@$%^&*()-_=+[];:,<>?';
        $probs[] = 3;
	}

    $chars = array();
    // We take a character from each segment
    foreach ($segs as $seg) {
        $chars[] = substr($seg, mt_rand(0, strlen($seg) - 1), 1);
    }

    // pad out the rest with a random selection
    while (count($chars) < $len) {
        $seg = $segs[$probs[mt_rand(0, count($probs) - 1)]];
        $chars[] = substr($seg, mt_rand(0, strlen($seg) - 1), 1);
    }

    // shuffle them up
    shuffle($chars);

    return implode('', $chars);
}

function help()
{
    return "Usage: password [-hen<n>]\n" .
           "\t-h: display this help\n" .
           "\t-e: extended characters (symbols)\n" .
           "\t-n: number of characters (<n> is number)\n";
}

$ops = getopt('hen:');

// Just show help
if (isset($ops['h'])) {
    die(help());
}

$len = 10;
if (isset($ops['n'])) {
    if (!is_numeric($ops['n'])) {
        echo "Invalid value for length argument\n";
        die(help());
    }
	$len = $ops['n'];
}

$password = password($len, isset($ops['e']));
if (!is_string($password)) {
    die("Unable to generate password\n");
}

echo "{$password}\n";
